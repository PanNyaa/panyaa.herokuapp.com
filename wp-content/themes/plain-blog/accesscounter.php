<style type"text/css">

/* Webフォントの読み込み */
/* Generated by Font Squirrel (http://www.fontsquirrel.com) on October 17, 2015 */
@font-face {
    font-family: 'cartoon_blocks_christmasRg';
    src:url('/WebFonts/cartoon_blocks_christmas-webfont-t.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

.counter-num {
    /* letter-spacing: -0.0vw; */
    font-family: "cartoon_blocks_christmasRg";
    font-size: 40px;
    color: #00c9ff;
    text-align: center;
    margin: -0.32em 0em -0.32em -0em;
    text-shadow: 0px 1px 0px rgba(0, 201, 255, 0.6),0px 2px 0px rgba(0, 201, 255, 0.3),0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0 5px #fff,0 0.08em 5px rgba(0,0,0,1),0 -0.04em 2px rgba(0,0,0,1);
    /* display: block; */
}

.counter-ty{
    font-size: 9px;
    color: #03D;
    line-height: 0.8;
    text-align: center;
    padding: 0em 0em 0.5em 0em;
}

</style>

<?php

    ini_set( 'display_errors', 1 ); //エラーメッセージを表示する設定にする

    /* herokuに置いたライブラリ群を読み込む*/
    require($_SERVER['DOCUMENT_ROOT']."/vendor/autoload.php");
    //自分用DropboxSDKラッパをサーバのルートからインクルード
    require($_SERVER['DOCUMENT_ROOT']."/lib/my-autoload.php");

    //渡されたリクエスト値をある程度正当なものかどうか判別する
    if(strlen($_REQUEST['fpk']) != 32){
        echo "ajaxハッシュ値が不正です\n";
        return -1; //ハッシュ値は32バイトなのでそれ以外の場合は不正な値とみなし処理を終了
    }

    date_default_timezone_set('Asia/Tokyo');            //タイムゾーンを日本に設定しま～～～す

    $countdata = "0 0 0 0"; //仮データを入れておく
    $counts = [0];
    $countlogdata = "1900/01/01,0,0\n"; //仮データ
    $countlogtable = [0];

    $ip = $_SERVER['REMOTE_ADDR'];  //アクセス元のIPアドレスを取得
    $ipdata = "0.0.0.0 0.0.0.0";   //仮データを入れておく
    $iptable = [0];
    
    $fingerhash = $_REQUEST['fpk']; //ajaxで渡されたFingerPrintのハッシュデータを取得
    $fingerhashdata = "0000000000000000 0000000000000000";  //仮データを入れておく
    $fingerhashtable = [0];
    $fingerhashlog = "hoge piyo";
    $fingerhashlogtable = [0];

    $path_countlog = "/data/countlog.gz";
    $path_countdata = "/data/countdata.gz";             //ファイルパスなので適宜いじってください
    $path_ipdata = "/data/ipdata.gz";                   //※ファイルパスの先頭には / もしくは ./ が必須なようです(無い場合はsdk側でエラーが出る)
    $path_fingerhashdata = "/data/fingerhashdata.gz";   //例えば /data/a.dat と指定した場合、アプリケーション指定したフォルダの直下にdata/a.datが生成されます
    $path_fingerhashlog = "/data/fingerhashlog.gz";     //例えば ./data/a.dat と指定した場合、このphpを実行しているフォルダの場所の構成がそのままアプリケーション指定したフォルダの直下に生成されます
                                                        //例えばheroku上で /wp-content/themes/plain-blog/accsesscounter.php で実行している場合、./data/a.dat と指定すると、
                                                        //  (アプリケーションフォルダ名)/app/wp-content/themes/plain-blog/data/a.dat が生成されます(/app/が間に挟まるのはherokuの特性です)
                                                        //絶対パスを指定すればそのままのパスでdropboxに作成されます
    $ipflag = true;
    $norepeatflag = true;
    $hashlogflag = true;

    //日付更新デバッグ用(他の人は触っちゃダメ！＞＜)
    if($_REQUEST['fpk'] === "0123456789ABCDEFGHIJKLMNOPQRSTUV"){
        $Debug = 1;
    }else{
        $Debug = 0;
    }

    //クラスでインスタンスを作る。アクセストークンなどはここで指定します。getenv()でheroku上に設定した環境変数から読み込んでいます。
    $client = new ExDropboxApp(getenv('DROPBOX_APP_KEY'),getenv('DROPBOX_APP_SECRET'),getenv('DROPBOX_ACCESS_TOKEN'));
    $dropbox = new ExDropbox($client);

    //Dropboxからファイルを読み込んでバイナリ内容を文字列として変数に渡す
    $ipdata = $dropbox->getGzipContents($path_ipdata);
    $countdata = $dropbox->getGzipContents($path_countdata);
    $fingerhashlog = $dropbox->getGzipContents($path_fingerhashlog);
    $countlog = $dropbox->getGzipContents($path_countlog);

    //explodeで区切り分解して配列に格納
    $iptable = explode(" ", $ipdata);   //IPアドレス群
    $counts = explode(" ", $countdata); //トータルアクセス数・今日のアクセス数・昨日のアクセス数・日付データ
    $fingerhashlogtable = explode(" ", $fingerhashlog); //Fingerhash累積データログ
    $countlogtable = explode("\n", $countlog); //年月日別アクセス数ログ
    
    if(date("j") != $counts[3] || $Debug) {       //日付確認（日付が変わった場合）
        // 2000/01/01,100,100000\n のようなデータを作成して配列の後ろに追加(年月日,今日のアクセス数,トータルアクセス数)
        $countlogtable[] = date("Y/m/d").",".$counts[1].",".$counts[0];
        $countlogdata = implode("\n",$countlogtable);   //データ群は改行で区切る
        $dropbox->uploadGzipContents($path_countlog,$countlogdata,["mode" => "overwrite"]);   //年月日別アクセス数ログをアップロード

        //今日のアクセス数カウント更新
        $counts[3] = date("j");         //日付$count[3]を今日の日付に
        $counts[2] = $counts[1];        //昨日のカウント$count[2]を$count[1]に
        $counts[1] = 0;                 //今日のカウント$count[1]を0に
        $fingerhashtable = explode(" ", $fingerhashdata); //仮データを半角スペースで分解して配列に格納(FingerHash)、仮データで昨日の分を上書き
    }else{
        $fingerhashdata = $dropbox->getGzipContents($path_fingerhashdata);  //FingerHashテーブルをDropboxから読み込み
        $fingerhashtable = explode(" ", $fingerhashdata);                   //FingerHashのデータ群も同じく分解し配列に格納
    }
    
    //今日の分のFingerHashログに同じハッシュがあったら同一訪問者なのでカウントしない
    foreach ($fingerhashtable as $value) {
        if($value === $fingerhash){
            $norepeatflag = false;
            break;  //同じハッシュがあったのでハッシュテーブルチェックをbreakでやめる
        }
    }
    unset($value);

    //IPログに同じIPアドレスがあったらIPアドレス記録フラグを消す
    foreach ($iptable as $value) {
        if($value === $ip){
            $ipflag = false;
            break;
        }
    }
    unset($value);

    //累積したFingerhashログと同じハッシュがあったらログ記録フラグを消す
    foreach ($fingerhashlogtable as $value) {
        if($value === $fingerhash){
            $hashlogflag = false;
            break;  //同じハッシュがあったのでハッシュテーブルチェックをbreakでやめる
        }
    }
    unset($value);
    
    //今日初めての訪問者だったらtrue
    if($norepeatflag){
        
        //トータルカウントと今日のカウントを1増やす
        $counts[0]++;
        $counts[1]++;
        
        //FingerHash値を配列の最初にプッシュする
        array_unshift($fingerhashtable,$fingerhash);

        //配列に含まれるデータ群をテキストに変換して変数に格納、区切り文字は半角スペース
        $countdata = implode(" ", $counts);
        $fingerhashdata = implode(" ", $fingerhashtable);


        //Dropboxにファイルとしてアップロード、上書き保存する
        $dropbox->uploadGzipContents($path_countdata,$countdata,["mode" => "overwrite"]);   //カウントデータ群
        $dropbox->uploadGzipContents($path_fingerhashdata,$fingerhashdata,["mode" => "overwrite"]); //FingerHash値群

    }

    //IPアドレスを記録
    if($ipflag){
        array_unshift($iptable,$ip);        //アクセス元IPアドレスを配列の最初にプッシュする
        $ipdata = implode(" ",$iptable);
        $dropbox->uploadGzipContents($path_ipdata,$ipdata,["mode" => "overwrite"]);
    }

    //Fingerhashの累積データを記録
    if($hashlogflag){
        array_unshift($fingerhashlogtable,$fingerhash);
        $fingerhashlog = implode(" ",$fingerhashlogtable);
        $dropbox->uploadGzipContents($path_fingerhashlog,$fingerhashlog,["mode" => "overwrite"]);
    }
    
    echo "<div class=\"counter-ty\">あくせすかうんた<br><br></div>\n";
    echo "<div class=\"counter-num\">",sprintf("%06d", $counts[0]),"</div>";
    echo "<div class=\"counter-ty\"><br>今日：", $counts[1], "　昨日：", $counts[2], "</div>\n";


    
?>

